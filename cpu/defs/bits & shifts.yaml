rlca:
  code: 0x07
  cycles:
    - addr: PC
      alu:  A ← rlc A
      ftch: YES
rrca:
  code: 0x0F
  cycles:
    - addr: PC
      alu:  A ← rrc A
      ftch: YES
rla:
  code: 0x17
  cycles:
    - addr: PC
      alu:  A ← rl A
      ftch: YES
rra:
  code: 0x1F
  cycles:
    - addr: PC
      alu:  A ← rr A
      ftch: YES
daa:
  code: 0x27
  cycles:
    - addr: PC
      alu:  DAA
      ftch: YES
cpl:
  code: 0x2F
  cycles:
    - addr: PC
      alu:  A ← not A
      ftch: YES
scf:
  code: 0x37
  cycles:
    - addr: PC
      alu:  cf ← 1
      ftch: YES
ccf:
  code: 0x3F
  cycles:
    - addr: PC
      alu:  cf ← not cf
      ftch: YES
rlc (hl):
  prefix: YES
  code: &rlc_hl 0x06
  cycles:
    - addr: HL
      data: Z ←
    - addr: HL
      data: ← ALU
      alu:  res ← rlc Z
    - addr: PC
      ftch: YES
rrc (hl):
  prefix: YES
  code: &rrc_hl 0x0E
  cycles:
    - addr: HL
      data: Z ←
    - addr: HL
      data: ← ALU
      alu:  res ← rrc Z
    - addr: PC
      ftch: YES
rl (hl):
  prefix: YES
  code: &rl_hl 0x16
  cycles:
    - addr: HL
      data: Z ←
    - addr: HL
      data: ← ALU
      alu:  res ← rl Z
    - addr: PC
      ftch: YES
rr (hl):
  prefix: YES
  code: &rr_hl 0x1E
  cycles:
    - addr: HL
      data: Z ←
    - addr: HL
      data: ← ALU
      alu:  res ← rr Z
    - addr: PC
      ftch: YES
sla (hl):
  prefix: YES
  code: &sla_hl 0x26
  cycles:
    - addr: HL
      data: Z ←
    - addr: HL
      data: ← ALU
      alu:  res ← sla Z
    - addr: PC
      ftch: YES
sra (hl):
  prefix: YES
  code: &sra_hl 0x2E
  cycles:
    - addr: HL
      data: Z ←
    - addr: HL
      data: ← ALU
      alu:  res ← sra Z
    - addr: PC
      ftch: YES
swap (hl):
  prefix: YES
  code: &swap_hl 0x36
  cycles:
    - addr: HL
      data: Z ←
    - addr: HL
      data: ← ALU
      alu:  res ← swap Z
    - addr: PC
      ftch: YES
srl (hl):
  prefix: YES
  code: &srl_hl 0x3E
  cycles:
    - addr: HL
      data: Z ←
    - addr: HL
      data: ← ALU
      alu:  res ← srl Z
    - addr: PC
      ftch: YES
bit b, (hl):
  prefix: YES
  code: &bit_b_hl 01***110
  cycles:
    - addr: HL
      data: Z ←
    - addr: PC
      alu:  bit Z
      ftch: YES
res b, (hl):
  prefix: YES
  code: &res_b_hl 10***110
  cycles:
    - addr: HL
      data: Z ←
    - addr: HL
      data: ← ALU
      alu:  res ← res Z
    - addr: PC
      ftch: YES
set b, (hl):
  prefix: YES
  code: &set_b_hl 11***110
  cycles:
    - addr: HL
      data: Z ←
    - addr: HL
      data: ← ALU
      alu:  res ← set Z
    - addr: PC
      ftch: YES
rlc r:
  prefix: YES
  code: 00000***
  exclude: *rlc_hl
  cycles:
    - addr: PC
      alu:  r ← rlc r
      ftch: YES
rrc r:
  prefix: YES
  code: 00001***
  exclude: *rrc_hl
  cycles:
    - addr: PC
      alu:  r ← rrc r
      ftch: YES
rl r:
  prefix: YES
  code: 00010***
  exclude: *rl_hl
  cycles:
    - addr: PC
      alu:  r ← rl r
      ftch: YES
rr r:
  prefix: YES
  code: 00011***
  exclude: *rr_hl
  cycles:
    - addr: PC
      alu:  r ← rr r
      ftch: YES
sla r:
  prefix: YES
  code: 00100***
  exclude: *sla_hl
  cycles:
    - addr: PC
      alu:  r ← sla r
      ftch: YES
sra r:
  prefix: YES
  code: 00101***
  exclude: *sra_hl
  cycles:
    - addr: PC
      alu:  r ← sra r
      ftch: YES
swap r:
  prefix: YES
  code: 00110***
  exclude: *swap_hl
  cycles:
    - addr: PC
      alu:  r ← swap r
      ftch: YES
srl r:
  prefix: YES
  code: 00111***
  exclude: *srl_hl
  cycles:
    - addr: PC
      alu:  r ← srl r
      ftch: YES
bit b, r:
  prefix: YES
  code: 01******
  exclude: *bit_b_hl
  cycles:
    - addr: PC
      alu:  bit r
      ftch: YES
res b, r:
  prefix: YES
  code: 10******
  exclude: *res_b_hl
  cycles:
    - addr: PC
      alu:  r ← res r
      ftch: YES
set b, r:
  prefix: YES
  code: 11******
  exclude: *set_b_hl
  cycles:
    - addr: PC
      alu:  r ← set r
      ftch: YES